shiny::runApp()
#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#
library(shiny)
# Define UI for application that draws a histogram
ui <- fluidPage(
# Application title
titlePanel("Old Faithful Geyser Data"),
# Sidebar with a slider input for number of bins
sidebarLayout(
sidebarPanel(
sliderInput("bins",
"Number of bins:",
min = 1,
max = 50,
value = 30)
),
# Show a plot of the generated distribution
mainPanel(
plotOutput("distPlot")
)
)
)
# Define server logic required to draw a histogram
server <- function(input, output) {
output$distPlot <- renderPlot({
# generate bins based on input$bins from ui.R
x    <- faithful[, 2]
bins <- seq(min(x), max(x), length.out = input$bins + 1)
# draw the histogram with the specified number of bins
hist(x, breaks = bins, col = 'darkgray', border = 'white',
xlab = 'Waiting time to next eruption (in mins)',
main = 'Histogram of waiting times')
})
}
# Run the application
shinyApp(ui = ui, server = server)
runApp()
runApp()
diamonds
data(diamonds)
# install.packages("shiny")
# install.packages("tidyverse")
library(shiny)
library(tidyverse)
View(diamonds)
summary(diamonds)
str(diamonds)
?diamonds
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
install.packages(ggplot2movies)
install.packages("ggplot2movies")
library(ggplot2movies)
?movies
#| include: false
#| echo: false
knitr::opts_chunk$set(
echo = TRUE,
message = FALSE,
warning = FALSE
)
View(movies)
starwars
View(starwars)
install.packages("arthistory")
library(arthistory)
?worksgardner
Views(worksgardner)
View(worksgardner)
install.packages("babynames"
)
library(babynames)
?babynames
View(babynames)
runApp('~')
diamonds
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point()
?diamonds
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 1)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10)
diamonds_plot <- ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 1,
type = 21,
alpha = 0.5
)
diamonds_plot
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
type = 21,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
type = 19,
alpha = 0.5
)
diamonds_plot <- ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
shape = 21,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
shape = 21,
alpha = 0.5
)
diamonds_plot <- ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
shape = 1,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
shape = 1,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 10,
shape = 19,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 5,
shape = 19,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
fill = color) +
geom_point(size = 5,
shape = 21,
alpha = 0.5,
color = 'black'
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 5,
shape = 19,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 1,
shape = 19,
alpha = 0.5
)
ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 3,
shape = 19,
alpha = 0.5
)
runApp('~')
runApp('~')
shiny::runApp()
library(shiny)
library(tidyverse)
runApp()
runApp()
runApp()
runApp()
runApp()
?diamonds
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(plotly)
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
library(shiny)
library(tidyverse)
runApp()
runApp()
View(diamonds)
?diamonds
diamonds_plot <- ggplot(data = diamonds) +
aes(x = carat,
y = price,
color = color) +
geom_point(size = 3,
shape = 19,
alpha = 0.5
)
diamonds_plot
diamonds_plot
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
